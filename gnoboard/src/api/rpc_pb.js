// @generated by protoc-gen-es v1.3.3
// @generated from file rpc.proto (package land.gno.gnomobile.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum land.gno.gnomobile.v1.KeyType
 */
export const KeyType = proto3.makeEnum(
  "land.gno.gnomobile.v1.KeyType",
  [
    {no: 0, name: "TypeLocal"},
    {no: 1, name: "TypeLedger"},
    {no: 2, name: "TypeOffline"},
    {no: 3, name: "TypeMulti"},
  ],
);

/**
 * ----------------
 * Special errors
 * ----------------
 *
 * @generated from enum land.gno.gnomobile.v1.ErrCode
 */
export const ErrCode = proto3.makeEnum(
  "land.gno.gnomobile.v1.ErrCode",
  [
    {no: 0, name: "Undefined"},
    {no: 1, name: "TODO"},
    {no: 2, name: "ErrNotImplemented"},
    {no: 3, name: "ErrInternal"},
    {no: 100, name: "ErrInvalidInput"},
    {no: 101, name: "ErrBridgeInterrupted"},
    {no: 102, name: "ErrMissingInput"},
    {no: 103, name: "ErrSerialization"},
    {no: 104, name: "ErrDeserialization"},
    {no: 105, name: "ErrCryptoKeyTypeUnknown"},
    {no: 106, name: "ErrCryptoKeyNotFound"},
    {no: 107, name: "ErrNoActiveAccount"},
    {no: 108, name: "ErrRunGRPCServer"},
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.KeyInfo
 */
export const KeyInfo = proto3.makeMessageType(
  "land.gno.gnomobile.v1.KeyInfo",
  () => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(KeyType) },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pub_key", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "address", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.ListKeyInfoRequest
 */
export const ListKeyInfoRequest = proto3.makeMessageType(
  "land.gno.gnomobile.v1.ListKeyInfoRequest",
  [],
);

/**
 * @generated from message land.gno.gnomobile.v1.ListKeyInfoResponse
 */
export const ListKeyInfoResponse = proto3.makeMessageType(
  "land.gno.gnomobile.v1.ListKeyInfoResponse",
  () => [
    { no: 1, name: "keys", kind: "message", T: KeyInfo, repeated: true },
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.CreateAccountRequest
 */
export const CreateAccountRequest = proto3.makeMessageType(
  "land.gno.gnomobile.v1.CreateAccountRequest",
  () => [
    { no: 1, name: "name_or_bech32", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "mnemonic", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "bip39_passwd", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "account", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.CreateAccountResponse
 */
export const CreateAccountResponse = proto3.makeMessageType(
  "land.gno.gnomobile.v1.CreateAccountResponse",
  () => [
    { no: 1, name: "key", kind: "message", T: KeyInfo },
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.SelectAccountRequest
 */
export const SelectAccountRequest = proto3.makeMessageType(
  "land.gno.gnomobile.v1.SelectAccountRequest",
  () => [
    { no: 1, name: "name_or_bech32", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.SelectAccountResponse
 */
export const SelectAccountResponse = proto3.makeMessageType(
  "land.gno.gnomobile.v1.SelectAccountResponse",
  () => [
    { no: 1, name: "key", kind: "message", T: KeyInfo },
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.GetActiveAccountRequest
 */
export const GetActiveAccountRequest = proto3.makeMessageType(
  "land.gno.gnomobile.v1.GetActiveAccountRequest",
  [],
);

/**
 * @generated from message land.gno.gnomobile.v1.GetActiveAccountResponse
 */
export const GetActiveAccountResponse = proto3.makeMessageType(
  "land.gno.gnomobile.v1.GetActiveAccountResponse",
  () => [
    { no: 1, name: "key", kind: "message", T: KeyInfo },
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.HelloRequest
 */
export const HelloRequest = proto3.makeMessageType(
  "land.gno.gnomobile.v1.HelloRequest",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.HelloResponse
 */
export const HelloResponse = proto3.makeMessageType(
  "land.gno.gnomobile.v1.HelloResponse",
  () => [
    { no: 1, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message land.gno.gnomobile.v1.ErrDetails
 */
export const ErrDetails = proto3.makeMessageType(
  "land.gno.gnomobile.v1.ErrDetails",
  () => [
    { no: 1, name: "codes", kind: "enum", T: proto3.getEnumType(ErrCode), repeated: true },
  ],
);

