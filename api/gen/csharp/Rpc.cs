// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Land.Gno.Gnonative.V1 {

  /// <summary>Holder for reflection information generated from rpc.proto</summary>
  public static partial class RpcReflection {

    #region Descriptor
    /// <summary>File descriptor for rpc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglycGMucHJvdG8SFWxhbmQuZ25vLmdub25hdGl2ZS52MRoUZ25vbmF0aXZl",
            "dHlwZXMucHJvdG8iQgoKRXJyRGV0YWlscxI0CgVjb2RlcxgBIAMoDjIeLmxh",
            "bmQuZ25vLmdub25hdGl2ZS52MS5FcnJDb2RlUgVjb2Rlcyq0BgoHRXJyQ29k",
            "ZRINCglVbmRlZmluZWQQABIICgRUT0RPEAESFQoRRXJyTm90SW1wbGVtZW50",
            "ZWQQAhIPCgtFcnJJbnRlcm5hbBADEhMKD0VyckludmFsaWRJbnB1dBBkEhgK",
            "FEVyckJyaWRnZUludGVycnVwdGVkEGUSEwoPRXJyTWlzc2luZ0lucHV0EGYS",
            "FAoQRXJyU2VyaWFsaXphdGlvbhBnEhYKEkVyckRlc2VyaWFsaXphdGlvbhBo",
            "EhIKDkVyckluaXRTZXJ2aWNlEGkSEAoMRXJyU2V0UmVtb3RlEGoSHAoXRXJy",
            "Q3J5cHRvS2V5VHlwZVVua25vd24QlgESGQoURXJyQ3J5cHRvS2V5Tm90Rm91",
            "bmQQlwESFwoSRXJyTm9BY3RpdmVBY2NvdW50EJgBEhUKEEVyclJ1bkdSUENT",
            "ZXJ2ZXIQmQESGAoTRXJyRGVjcnlwdGlvbkZhaWxlZBCaARIQCgtFcnJUeERl",
            "Y29kZRDIARIXChJFcnJJbnZhbGlkU2VxdWVuY2UQyQESFAoPRXJyVW5hdXRo",
            "b3JpemVkEMoBEhkKFEVyckluc3VmZmljaWVudEZ1bmRzEMsBEhYKEUVyclVu",
            "a25vd25SZXF1ZXN0EMwBEhYKEUVyckludmFsaWRBZGRyZXNzEM0BEhYKEUVy",
            "clVua25vd25BZGRyZXNzEM4BEhUKEEVyckludmFsaWRQdWJLZXkQzwESGQoU",
            "RXJySW5zdWZmaWNpZW50Q29pbnMQ0AESFAoPRXJySW52YWxpZENvaW5zENEB",
            "EhgKE0VyckludmFsaWRHYXNXYW50ZWQQ0gESEAoLRXJyT3V0T2ZHYXMQ0wES",
            "FAoPRXJyTWVtb1Rvb0xhcmdlENQBEhcKEkVyckluc3VmZmljaWVudEZlZRDV",
            "ARIZChRFcnJUb29NYW55U2lnbmF0dXJlcxDWARIUCg9FcnJOb1NpZ25hdHVy",
            "ZXMQ1wESEwoORXJyR2FzT3ZlcmZsb3cQ2AESFgoRRXJySW52YWxpZFBrZ1Bh",
            "dGgQ2QESEwoORXJySW52YWxpZFN0bXQQ2gESEwoORXJySW52YWxpZEV4cHIQ",
            "2wEy5RsKEEdub05hdGl2ZVNlcnZpY2USXgoJU2V0UmVtb3RlEicubGFuZC5n",
            "bm8uZ25vbmF0aXZlLnYxLlNldFJlbW90ZVJlcXVlc3QaKC5sYW5kLmduby5n",
            "bm9uYXRpdmUudjEuU2V0UmVtb3RlUmVzcG9uc2USXgoJR2V0UmVtb3RlEicu",
            "bGFuZC5nbm8uZ25vbmF0aXZlLnYxLkdldFJlbW90ZVJlcXVlc3QaKC5sYW5k",
            "Lmduby5nbm9uYXRpdmUudjEuR2V0UmVtb3RlUmVzcG9uc2USYQoKU2V0Q2hh",
            "aW5JRBIoLmxhbmQuZ25vLmdub25hdGl2ZS52MS5TZXRDaGFpbklEUmVxdWVz",
            "dBopLmxhbmQuZ25vLmdub25hdGl2ZS52MS5TZXRDaGFpbklEUmVzcG9uc2US",
            "YQoKR2V0Q2hhaW5JRBIoLmxhbmQuZ25vLmdub25hdGl2ZS52MS5HZXRDaGFp",
            "bklEUmVxdWVzdBopLmxhbmQuZ25vLmdub25hdGl2ZS52MS5HZXRDaGFpbklE",
            "UmVzcG9uc2UShQEKFkdlbmVyYXRlUmVjb3ZlcnlQaHJhc2USNC5sYW5kLmdu",
            "by5nbm9uYXRpdmUudjEuR2VuZXJhdGVSZWNvdmVyeVBocmFzZVJlcXVlc3Qa",
            "NS5sYW5kLmduby5nbm9uYXRpdmUudjEuR2VuZXJhdGVSZWNvdmVyeVBocmFz",
            "ZVJlc3BvbnNlEmQKC0xpc3RLZXlJbmZvEikubGFuZC5nbm8uZ25vbmF0aXZl",
            "LnYxLkxpc3RLZXlJbmZvUmVxdWVzdBoqLmxhbmQuZ25vLmdub25hdGl2ZS52",
            "MS5MaXN0S2V5SW5mb1Jlc3BvbnNlEmcKDEhhc0tleUJ5TmFtZRIqLmxhbmQu",
            "Z25vLmdub25hdGl2ZS52MS5IYXNLZXlCeU5hbWVSZXF1ZXN0GisubGFuZC5n",
            "bm8uZ25vbmF0aXZlLnYxLkhhc0tleUJ5TmFtZVJlc3BvbnNlEnAKD0hhc0tl",
            "eUJ5QWRkcmVzcxItLmxhbmQuZ25vLmdub25hdGl2ZS52MS5IYXNLZXlCeUFk",
            "ZHJlc3NSZXF1ZXN0Gi4ubGFuZC5nbm8uZ25vbmF0aXZlLnYxLkhhc0tleUJ5",
            "QWRkcmVzc1Jlc3BvbnNlEoIBChVIYXNLZXlCeU5hbWVPckFkZHJlc3MSMy5s",
            "YW5kLmduby5nbm9uYXRpdmUudjEuSGFzS2V5QnlOYW1lT3JBZGRyZXNzUmVx",
            "dWVzdBo0LmxhbmQuZ25vLmdub25hdGl2ZS52MS5IYXNLZXlCeU5hbWVPckFk",
            "ZHJlc3NSZXNwb25zZRJzChBHZXRLZXlJbmZvQnlOYW1lEi4ubGFuZC5nbm8u",
            "Z25vbmF0aXZlLnYxLkdldEtleUluZm9CeU5hbWVSZXF1ZXN0Gi8ubGFuZC5n",
            "bm8uZ25vbmF0aXZlLnYxLkdldEtleUluZm9CeU5hbWVSZXNwb25zZRJ8ChNH",
            "ZXRLZXlJbmZvQnlBZGRyZXNzEjEubGFuZC5nbm8uZ25vbmF0aXZlLnYxLkdl",
            "dEtleUluZm9CeUFkZHJlc3NSZXF1ZXN0GjIubGFuZC5nbm8uZ25vbmF0aXZl",
            "LnYxLkdldEtleUluZm9CeUFkZHJlc3NSZXNwb25zZRKOAQoZR2V0S2V5SW5m",
            "b0J5TmFtZU9yQWRkcmVzcxI3LmxhbmQuZ25vLmdub25hdGl2ZS52MS5HZXRL",
            "ZXlJbmZvQnlOYW1lT3JBZGRyZXNzUmVxdWVzdBo4LmxhbmQuZ25vLmdub25h",
            "dGl2ZS52MS5HZXRLZXlJbmZvQnlOYW1lT3JBZGRyZXNzUmVzcG9uc2USagoN",
            "Q3JlYXRlQWNjb3VudBIrLmxhbmQuZ25vLmdub25hdGl2ZS52MS5DcmVhdGVB",
            "Y2NvdW50UmVxdWVzdBosLmxhbmQuZ25vLmdub25hdGl2ZS52MS5DcmVhdGVB",
            "Y2NvdW50UmVzcG9uc2USagoNU2VsZWN0QWNjb3VudBIrLmxhbmQuZ25vLmdu",
            "b25hdGl2ZS52MS5TZWxlY3RBY2NvdW50UmVxdWVzdBosLmxhbmQuZ25vLmdu",
            "b25hdGl2ZS52MS5TZWxlY3RBY2NvdW50UmVzcG9uc2USZAoLU2V0UGFzc3dv",
            "cmQSKS5sYW5kLmduby5nbm9uYXRpdmUudjEuU2V0UGFzc3dvcmRSZXF1ZXN0",
            "GioubGFuZC5nbm8uZ25vbmF0aXZlLnYxLlNldFBhc3N3b3JkUmVzcG9uc2US",
            "cwoQR2V0QWN0aXZlQWNjb3VudBIuLmxhbmQuZ25vLmdub25hdGl2ZS52MS5H",
            "ZXRBY3RpdmVBY2NvdW50UmVxdWVzdBovLmxhbmQuZ25vLmdub25hdGl2ZS52",
            "MS5HZXRBY3RpdmVBY2NvdW50UmVzcG9uc2USZwoMUXVlcnlBY2NvdW50Eiou",
            "bGFuZC5nbm8uZ25vbmF0aXZlLnYxLlF1ZXJ5QWNjb3VudFJlcXVlc3QaKy5s",
            "YW5kLmduby5nbm9uYXRpdmUudjEuUXVlcnlBY2NvdW50UmVzcG9uc2USagoN",
            "RGVsZXRlQWNjb3VudBIrLmxhbmQuZ25vLmdub25hdGl2ZS52MS5EZWxldGVB",
            "Y2NvdW50UmVxdWVzdBosLmxhbmQuZ25vLmdub25hdGl2ZS52MS5EZWxldGVB",
            "Y2NvdW50UmVzcG9uc2USUgoFUXVlcnkSIy5sYW5kLmduby5nbm9uYXRpdmUu",
            "djEuUXVlcnlSZXF1ZXN0GiQubGFuZC5nbm8uZ25vbmF0aXZlLnYxLlF1ZXJ5",
            "UmVzcG9uc2USVQoGUmVuZGVyEiQubGFuZC5nbm8uZ25vbmF0aXZlLnYxLlJl",
            "bmRlclJlcXVlc3QaJS5sYW5kLmduby5nbm9uYXRpdmUudjEuUmVuZGVyUmVz",
            "cG9uc2USUgoFUUV2YWwSIy5sYW5kLmduby5nbm9uYXRpdmUudjEuUUV2YWxS",
            "ZXF1ZXN0GiQubGFuZC5nbm8uZ25vbmF0aXZlLnYxLlFFdmFsUmVzcG9uc2US",
            "UQoEQ2FsbBIiLmxhbmQuZ25vLmdub25hdGl2ZS52MS5DYWxsUmVxdWVzdBoj",
            "LmxhbmQuZ25vLmdub25hdGl2ZS52MS5DYWxsUmVzcG9uc2UwARJRCgRTZW5k",
            "EiIubGFuZC5nbm8uZ25vbmF0aXZlLnYxLlNlbmRSZXF1ZXN0GiMubGFuZC5n",
            "bm8uZ25vbmF0aXZlLnYxLlNlbmRSZXNwb25zZTABEk4KA1J1bhIhLmxhbmQu",
            "Z25vLmdub25hdGl2ZS52MS5SdW5SZXF1ZXN0GiIubGFuZC5nbm8uZ25vbmF0",
            "aXZlLnYxLlJ1blJlc3BvbnNlMAESVwoKTWFrZUNhbGxUeBIiLmxhbmQuZ25v",
            "Lmdub25hdGl2ZS52MS5DYWxsUmVxdWVzdBolLmxhbmQuZ25vLmdub25hdGl2",
            "ZS52MS5NYWtlVHhSZXNwb25zZRJXCgpNYWtlU2VuZFR4EiIubGFuZC5nbm8u",
            "Z25vbmF0aXZlLnYxLlNlbmRSZXF1ZXN0GiUubGFuZC5nbm8uZ25vbmF0aXZl",
            "LnYxLk1ha2VUeFJlc3BvbnNlElUKCU1ha2VSdW5UeBIhLmxhbmQuZ25vLmdu",
            "b25hdGl2ZS52MS5SdW5SZXF1ZXN0GiUubGFuZC5nbm8uZ25vbmF0aXZlLnYx",
            "Lk1ha2VUeFJlc3BvbnNlElUKBlNpZ25UeBIkLmxhbmQuZ25vLmdub25hdGl2",
            "ZS52MS5TaWduVHhSZXF1ZXN0GiUubGFuZC5nbm8uZ25vbmF0aXZlLnYxLlNp",
            "Z25UeFJlc3BvbnNlEngKEUJyb2FkY2FzdFR4Q29tbWl0Ei8ubGFuZC5nbm8u",
            "Z25vbmF0aXZlLnYxLkJyb2FkY2FzdFR4Q29tbWl0UmVxdWVzdBowLmxhbmQu",
            "Z25vLmdub25hdGl2ZS52MS5Ccm9hZGNhc3RUeENvbW1pdFJlc3BvbnNlMAES",
            "cAoPQWRkcmVzc1RvQmVjaDMyEi0ubGFuZC5nbm8uZ25vbmF0aXZlLnYxLkFk",
            "ZHJlc3NUb0JlY2gzMlJlcXVlc3QaLi5sYW5kLmduby5nbm9uYXRpdmUudjEu",
            "QWRkcmVzc1RvQmVjaDMyUmVzcG9uc2USdgoRQWRkcmVzc0Zyb21CZWNoMzIS",
            "Ly5sYW5kLmduby5nbm9uYXRpdmUudjEuQWRkcmVzc0Zyb21CZWNoMzJSZXF1",
            "ZXN0GjAubGFuZC5nbm8uZ25vbmF0aXZlLnYxLkFkZHJlc3NGcm9tQmVjaDMy",
            "UmVzcG9uc2USfAoTQWRkcmVzc0Zyb21NbmVtb25pYxIxLmxhbmQuZ25vLmdu",
            "b25hdGl2ZS52MS5BZGRyZXNzRnJvbU1uZW1vbmljUmVxdWVzdBoyLmxhbmQu",
            "Z25vLmdub25hdGl2ZS52MS5BZGRyZXNzRnJvbU1uZW1vbmljUmVzcG9uc2US",
            "UgoFSGVsbG8SIy5sYW5kLmduby5nbm9uYXRpdmUudjEuSGVsbG9SZXF1ZXN0",
            "GiQubGFuZC5nbm8uZ25vbmF0aXZlLnYxLkhlbGxvUmVzcG9uc2USZgoLSGVs",
            "bG9TdHJlYW0SKS5sYW5kLmduby5nbm9uYXRpdmUudjEuSGVsbG9TdHJlYW1S",
            "ZXF1ZXN0GioubGFuZC5nbm8uZ25vbmF0aXZlLnYxLkhlbGxvU3RyZWFtUmVz",
            "cG9uc2UwAUIvWidnaXRodWIuY29tL2dub2xhbmcvZ25vbmF0aXZlL2FwaS9n",
            "ZW4vZ2+iAgNSVEdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Land.Gno.Gnonative.V1.GnonativetypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Land.Gno.Gnonative.V1.ErrCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Land.Gno.Gnonative.V1.ErrDetails), global::Land.Gno.Gnonative.V1.ErrDetails.Parser, new[]{ "Codes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The ErrCode enum defines errors for gRPC API functions. These are converted
  /// from the Go error types returned by gnoclient.
  /// </summary>
  public enum ErrCode {
    /// <summary>
    /// Undefined is the default value. It should never be set manually
    /// </summary>
    [pbr::OriginalName("Undefined")] Undefined = 0,
    /// <summary>
    /// TODO indicates that you plan to create an error later
    /// </summary>
    [pbr::OriginalName("TODO")] Todo = 1,
    /// <summary>
    /// ErrNotImplemented indicates that a method is not implemented yet
    /// </summary>
    [pbr::OriginalName("ErrNotImplemented")] ErrNotImplemented = 2,
    /// <summary>
    /// ErrInternal indicates an unknown error (without Code), i.e. in gRPC
    /// </summary>
    [pbr::OriginalName("ErrInternal")] ErrInternal = 3,
    [pbr::OriginalName("ErrInvalidInput")] ErrInvalidInput = 100,
    [pbr::OriginalName("ErrBridgeInterrupted")] ErrBridgeInterrupted = 101,
    [pbr::OriginalName("ErrMissingInput")] ErrMissingInput = 102,
    [pbr::OriginalName("ErrSerialization")] ErrSerialization = 103,
    [pbr::OriginalName("ErrDeserialization")] ErrDeserialization = 104,
    [pbr::OriginalName("ErrInitService")] ErrInitService = 105,
    [pbr::OriginalName("ErrSetRemote")] ErrSetRemote = 106,
    [pbr::OriginalName("ErrCryptoKeyTypeUnknown")] ErrCryptoKeyTypeUnknown = 150,
    /// <summary>
    /// ErrCryptoKeyNotFound indicates that the doesn't exist in the keybase
    /// </summary>
    [pbr::OriginalName("ErrCryptoKeyNotFound")] ErrCryptoKeyNotFound = 151,
    /// <summary>
    /// ErrNoActiveAccount indicates that no active account has been set with SelectAccount
    /// </summary>
    [pbr::OriginalName("ErrNoActiveAccount")] ErrNoActiveAccount = 152,
    [pbr::OriginalName("ErrRunGRPCServer")] ErrRunGrpcserver = 153,
    /// <summary>
    /// ErrDecryptionFailed indicates a decryption failure including a wrong password
    /// </summary>
    [pbr::OriginalName("ErrDecryptionFailed")] ErrDecryptionFailed = 154,
    [pbr::OriginalName("ErrTxDecode")] ErrTxDecode = 200,
    [pbr::OriginalName("ErrInvalidSequence")] ErrInvalidSequence = 201,
    [pbr::OriginalName("ErrUnauthorized")] ErrUnauthorized = 202,
    /// <summary>
    /// ErrInsufficientFunds indicates that there are insufficient funds to pay for fees
    /// </summary>
    [pbr::OriginalName("ErrInsufficientFunds")] ErrInsufficientFunds = 203,
    /// <summary>
    /// ErrUnknownRequest indicates that the path of a realm function call is unrecognized
    /// </summary>
    [pbr::OriginalName("ErrUnknownRequest")] ErrUnknownRequest = 204,
    /// <summary>
    /// ErrInvalidAddress indicates that an account address is blank or the bech32 can't be decoded
    /// </summary>
    [pbr::OriginalName("ErrInvalidAddress")] ErrInvalidAddress = 205,
    /// <summary>
    /// ErrUnknownAddress indicates that the address is unknown on the blockchain
    /// </summary>
    [pbr::OriginalName("ErrUnknownAddress")] ErrUnknownAddress = 206,
    /// <summary>
    /// ErrInvalidPubKey indicates that the public key was not found or has an invalid algorithm or format
    /// </summary>
    [pbr::OriginalName("ErrInvalidPubKey")] ErrInvalidPubKey = 207,
    /// <summary>
    /// ErrInsufficientCoins indicates that the transaction has insufficient account funds to send
    /// </summary>
    [pbr::OriginalName("ErrInsufficientCoins")] ErrInsufficientCoins = 208,
    /// <summary>
    /// ErrInvalidCoins indicates that the transaction Coins are not sorted, or don't have a
    /// positive amount, or the coin Denom contains upper case characters
    /// </summary>
    [pbr::OriginalName("ErrInvalidCoins")] ErrInvalidCoins = 209,
    /// <summary>
    /// ErrInvalidGasWanted indicates that the transaction gas wanted is too large or otherwise invalid
    /// </summary>
    [pbr::OriginalName("ErrInvalidGasWanted")] ErrInvalidGasWanted = 210,
    /// <summary>
    /// ErrOutOfGas indicates that the transaction doesn't have enough gas
    /// </summary>
    [pbr::OriginalName("ErrOutOfGas")] ErrOutOfGas = 211,
    /// <summary>
    /// ErrMemoTooLarge indicates that the transaction memo is too large
    /// </summary>
    [pbr::OriginalName("ErrMemoTooLarge")] ErrMemoTooLarge = 212,
    /// <summary>
    /// ErrInsufficientFee indicates that the gas fee is insufficient
    /// </summary>
    [pbr::OriginalName("ErrInsufficientFee")] ErrInsufficientFee = 213,
    /// <summary>
    /// ErrTooManySignatures indicates that the transaction has too many signatures
    /// </summary>
    [pbr::OriginalName("ErrTooManySignatures")] ErrTooManySignatures = 214,
    /// <summary>
    /// ErrNoSignatures indicates that the transaction has no signatures
    /// </summary>
    [pbr::OriginalName("ErrNoSignatures")] ErrNoSignatures = 215,
    /// <summary>
    /// ErrGasOverflow indicates that an action results in a gas consumption unsigned integer overflow
    /// </summary>
    [pbr::OriginalName("ErrGasOverflow")] ErrGasOverflow = 216,
    /// <summary>
    /// ErrInvalidPkgPath indicates that the package path is not recognized.
    /// </summary>
    [pbr::OriginalName("ErrInvalidPkgPath")] ErrInvalidPkgPath = 217,
    [pbr::OriginalName("ErrInvalidStmt")] ErrInvalidStmt = 218,
    [pbr::OriginalName("ErrInvalidExpr")] ErrInvalidExpr = 219,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ErrDetails : pb::IMessage<ErrDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ErrDetails> _parser = new pb::MessageParser<ErrDetails>(() => new ErrDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ErrDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Land.Gno.Gnonative.V1.RpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrDetails(ErrDetails other) : this() {
      codes_ = other.codes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrDetails Clone() {
      return new ErrDetails(this);
    }

    /// <summary>Field number for the "codes" field.</summary>
    public const int CodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Land.Gno.Gnonative.V1.ErrCode> _repeated_codes_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Land.Gno.Gnonative.V1.ErrCode) x);
    private readonly pbc::RepeatedField<global::Land.Gno.Gnonative.V1.ErrCode> codes_ = new pbc::RepeatedField<global::Land.Gno.Gnonative.V1.ErrCode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Land.Gno.Gnonative.V1.ErrCode> Codes {
      get { return codes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ErrDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ErrDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!codes_.Equals(other.codes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= codes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      codes_.WriteTo(output, _repeated_codes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      codes_.WriteTo(ref output, _repeated_codes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += codes_.CalculateSize(_repeated_codes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ErrDetails other) {
      if (other == null) {
        return;
      }
      codes_.Add(other.codes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            codes_.AddEntriesFrom(input, _repeated_codes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            codes_.AddEntriesFrom(ref input, _repeated_codes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
